## Shell
# Use zsh
set -g default-shell /bin/zsh

## Commands
# Use C-s as prefix
set -g prefix C-s
unbind C-s
bind C-s send-prefix

# Reload tmux file
unbind r
bind r source-file $HOME/.tmux.conf \; display-message "  Config reloaded...".

# Required for macOS (for 10.11 and early)
#if-shell 'test "$(uname)" = "Darwin" && type reattach-to-user-namespace' set -g default-command "reattach-to-user-namespace -l $SHELL"

# Autoinstall tpm and plugins
if-shell '[[ ! -d $HOME/.tmux/plugins/tpm ]]' 'run-shell "git clone https://github.com/tmux-plugins/tpm /tmp/.tmux/plugins/tpm"'


## Configuration
# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Force 256 color
set -g default-terminal "screen-256color"

# Automatically set window title
set -g set-titles on
set -g set-titles-string "#{pane_current_path} - #{host}"

setw -g automatic-rename on

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Set to scrolls VIM not tmux history with mouse
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Scrollback buffer n lines
set -g history-limit 100000

# Messages are displayed for 4 seconds
set -g display-time 4000

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

set -g display-panes-time 3000

set -g focus-events on

# Rather than constraining window size to the maximum size of any client connected to the *session*, constrain window size to the maximum size of any client connected to *that window*.
setw -g aggressive-resize on

# Manage tmux sessions resurection
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes 'ssh psql mysql sqlite3 man more less'

set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'


# Manage sessions
#bind C-s choose-session
unbind Q
bind-key Q confirm-before kill-session
# tmux-plugins/tmux-sessionist
# <prefix> + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
# <prefix> + C (shift + c) - prompt for creating a new session by name.
# <prefix> + X (shift + x) - kill current session without detaching tmux.
# <prefix> + S (shift + s) - switches to the last session.
# The same as built-in prefix + L that everyone seems to override with some other binding.
# <prefix> + @ - promote current pane into a new session.
# Analogous to how prefix + ! breaks current pane to a new window.
# <prefix> + t<secondary-key> - join currently marked pane (prefix + m) to current session/window, and switch to it
# secondary-keys
#		h, -, ": join horizontally
#		v, |, %: join vertically
#		f, @: join full screen


# Manage Windows
# Create a window:
# <prefix> c          create a new window
# Switch between windows:
# <prefix> 1 ...      switch to window 1, ..., 9, 0
# <prefix> p          previous window
# <prefix> n          next window
# <prefix> l          ‘last’ (previously used) window
unbind m
bind-key m last-window
# <prefix> w          choose window from a list
unbind s
bind s choose-tree
# Switch between windows with a twist:
# <prefix> M-n        next window with a bell, activity or
# <prefix> M-p        previous such window
# Other:
# <prefix> ,          rename the current window
# <prefix> &          kill the current window

# Manage panes
# tmux-plugins/tmux-pain-control
# Navigation
# prefix + h and prefix + C-h
# select pane on the left
# prefix + j and prefix + C-j
# select pane below the current one
# prefix + k and prefix + C-k
# select pane above
# prefix + l and prefix + C-l
# select pane on the right
#
# Resizing panes
# prefix + shift + h
# resize 5 cells to the left
# prefix + shift + j
# resize 5 cells in the down direction
# prefix + shift + k
# resize 5 cells in the up direction
# prefix + shift + l
# resize 5 cells to the right
#
# Splitting panes
# prefix + |
# split current pane horizontally
# prefix + -
# split current pane vertically
# prefix + \
# split current pane full width horizontally
# prefix + _
# split current pane full width vertically
# prefix + ;
# switch to last pane
#
# Swapping windows
#
# prefix + < - moves current window one position to the left
# prefix + > - moves current window one position to the right

unbind T
bind T kill-pane -a

# Use hjkl for moving and HJKL for resizing
setw -g mode-keys vi
setw -g status-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -r Z resize-pane -y 40

# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
is_fzf='echo "#{pane_current_command}" | grep -iqE "^[^TXZ ]+ +(\\S+\\/)?fzf$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

## Copy and paste
set -g @shell_mode 'vi'

set -g mouse on

# Vi copypaste
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"


## Themes
# Statusbar
# Status update interval
set -g status-interval 5

if-shell '[[ ! -f $HOME/.tmux.theme ]]' 'run-shell "vim +PlugUpdate +qall && vim +TmuxlineSnapshot $HOME/.tmux.theme +qall"'

# Use autogenerated tmux status line
#if-shell '[[ -f $HOME/.tmux.theme ]]' 'source $HOME/.tmux.theme'

set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=colour255,bg=colour238"
set -g status-right-style "none"
set -g pane-border-status top
set -g pane-border-format "#[nobold,underscore,noitalics]#{pane_index} #{pane_current_command} | #{pane_current_path} "
set -g pane-border-style "fg=colour238"
set -g pane-active-border-style "fg=colour9"
set -g status-style "none,bg=colour234"
set -g message-style "fg=colour255,bg=colour238"
set -g status-right-length "200"
set -g status-left-length "100"
setw -g window-status-activity-style "none"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=colour85,bg=colour234"
set -g status-left "#[fg=colour17,bg=colour9] #S #[fg=colour9,bg=colour234,nobold,nounderscore,noitalics]"
set -g status-right "#{prefix_highlight} #[fg=colour17,bg=colour9,nobold,nounderscore,noitalics] #{vm_status} #[fg=colour255,bg=colour238,nobold,nounderscore,noitalics] %Y-%m-%d | %H:%M #[fg=colour17,bg=colour9,nobold,nounderscore,noitalics] #h "
setw -g window-status-format "#[fg=colour85,bg=colour234] #I |#[fg=colour85,bg=colour234] #W "
setw -g window-status-current-format "#[fg=colour234,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] #I |#[fg=colour255,bg=colour238] #W #[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]"


## tmux plugins manager
# List of plugins
set -g @tpm_plugins '                \
  tmux-plugins/tpm                   \
  tmux-plugins/tmux-sessionist       \
  tmux-plugins/tmux-pain-control     \
  tmux-plugins/tmux-sensible         \
  stonevil/tmux-vm-status            \
  stonevil/tmux-docker-status        \
  tmux-plugins/tmux-resurrect        \
  soyuka/tmux-current-pane-hostname  \
  tmux-plugins/tmux-prefix-highlight \
'
# List of disabled plugins
# tmux-plugins/tmux-battery          \
#  samoshkin/tmux-plugin-sysstat     \
#  thewtex/tmux-mem-cpu-load         \
#  stonevil/tmux-hostname-status     \
#  stonevil/tmux-wan-status          \
#  stonevil/tmux-lan-status          \


# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
