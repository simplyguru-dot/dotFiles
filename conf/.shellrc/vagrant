# vim:ft=sh :

# Vagrant
export VAGRANT=/opt/vagrant
export VAGRANT_DOTFILE_PATH=$HOME/Vagrant

if [[ ! -d $VAGRANT_DOTFILE_PATH ]]; then
	mkdir -p $VAGRANT_DOTFILE_PATH
fi

if [[ -d $VAGRANT ]]; then
	export PATH=$VAGRANT/bin:$PATH
	if [[ -f '/Applications/VMware Fusion.app/Contents/Library/vmrun' ]]; then
		echo "VMware Fusion detected. Vagrant now use VMware Fusion!"
		function vv() { vagrant up $@ --provider vmware_fusion; }
		export VAGRANT_DEFAULT_PROVIDER='vmware_fusion'
	else
		if [[ -f '/usr/bin/vmware' ]] && [[ -f '/usr/share/applications/vmware-workstation.desktop' ]]; then
			echo "VMware Workstation for Linux detected. Vagrant now use VMware Workstation!"
			function vv() { vagrant up $@ --provider vmware_workstation; }
			export VAGRANT_DEFAULT_PROVIDER='vmware_workstation'
		else
			echo "Vagrant now use VirtualBox!"
			function vv() { vagrant up $@; }
		fi
	fi

	export VAGRANT_PROVIDER_GUI="false"

	function vl() { vagrant reload $@ --provision; }
	alias vh='vagrant halt'
	alias vd='vagrant destroy'
	alias vs='vagrant ssh'
	alias vt='vagrant status'
	alias vr='vagrant resume'

	function vagrant-ip() {
		vagrant ssh -c "ip address show eth0 | grep 'inet ' | sed -e 's/^.*inet //' -e 's/\/.*$//'"
	}

	function vagrant-install-all-plugins() { vagrant plugin install vagrant-vbguest }
	function vagrant-update-all-plugins() { for plugin in $(vagrant plugin list | cut -f1 -d' '); do vagrant plugin update $plugin; done; }
fi
